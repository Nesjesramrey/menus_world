{"ast":null,"code":"var _jsxFileName = \"/home/nesramblue/Nestor/Kodemia/menus_world/src/components/AddComment/index.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./AddComment.css\";\nimport { useState } from \"react\";\nimport { Rating } from \"react-simple-star-rating\";\nimport { createComment as sendComment } from \"../../services/menus\";\nimport { getIsLogeddIn, getIsUserAdmin } from \"../../Auth/auth\"; //Cokkies\n\nimport Cookies from \"universal-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddComment(id) {\n  _s();\n\n  const [canComment, setCanComment] = useState(false); //state\n\n  const [text, setText] = useState(\"\"); // add usertype, ID and username\n\n  const cookies = new Cookies();\n  const userType = cookies.get(\"TipoUsuario\");\n  const userId = cookies.get(\"Id\");\n  const userName = cookies.get(\"Usuario\"); //console.log(userType, userId, userName);\n  //value of rating\n\n  const [ratingValue, setRatingValue] = useState(0);\n  const [existComment, setExistComment] = useState(true); //state of logins\n  //const [isLogIn, setIsLogIn] = useState(null);\n  //const [isUser, setUser] = useState(null);\n  // read cookies\n  //console.log(getIsLogeddIn());\n  //console.log(getIsUserAdmin());\n  //setIsLogIn(true);\n  //setUser(true);\n  //const idser = id;\n  //const userName = name;\n\n  const handleRating = rate => setRatingValue(rate / 20); //console.log(ratingValue);\n\n\n  const sendData = () => {\n    let today = new Date();\n    const data = {\n      user: {\n        userName\n      },\n      rating: ratingValue,\n      comment: text,\n      idUser: {\n        userId\n      },\n      date: today\n    };\n    console.log(data);\n    const Url = \"http://localhost:8000/detalle/\" + id;\n    fetch(Url, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      console.log(\"Success:\", data);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  };\n\n  const addNewcomment = msg => {\n    //not logIn\n    if (userName === false) {\n      console.error(\"Para agregar comentarios debes iniciar sesión\");\n    } else {\n      //Is logIn\n      if (userType === \"Administrador de restaurante\") {\n        //only user can add comments\n        setCanComment(false);\n        setText(msg);\n        sendData();\n      } else {\n        //admins can't comment\n        console.error(\"No se puede agregar comentarios con sesión de administrador\");\n      }\n    }\n  };\n\n  function createContent() {\n    if (canComment === false) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"addComment\",\n        type: \"button\",\n        onClick: () => setCanComment(true),\n        children: \"Agrega un comentario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (canComment === true) {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"formAddComment\",\n        action: \"/action_page.php\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"textInstructions\",\n          children: \"Escribe un comentario sobre el platillo y deja tu puntuaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"addNewComment\",\n          name: \"newComment\",\n          placeholder: \"Escribe tu rese\\xF1a del platillo\",\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Rating, {\n          transition: true,\n          onClick: handleRating,\n          ratingValue: ratingValue,\n          fillColor: \"#ffd700\",\n          emptyColor: \"#888888\",\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"addComment\",\n          type: \"button\",\n          onClick: e => addNewcomment(text),\n          children: \"Enviar comentario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"addCommentSection\",\n    children: createContent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 10\n  }, this);\n}\n\n_s(AddComment, \"jiTE+2ry67vTAbE6reEuRjM00LA=\");\n\n_c = AddComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddComment\");","map":{"version":3,"names":["useState","Rating","createComment","sendComment","getIsLogeddIn","getIsUserAdmin","Cookies","AddComment","id","canComment","setCanComment","text","setText","cookies","userType","get","userId","userName","ratingValue","setRatingValue","existComment","setExistComment","handleRating","rate","sendData","today","Date","data","user","rating","comment","idUser","date","console","log","Url","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error","addNewcomment","msg","createContent","e","target","value"],"sources":["/home/nesramblue/Nestor/Kodemia/menus_world/src/components/AddComment/index.jsx"],"sourcesContent":["import \"./AddComment.css\";\r\nimport { useState } from \"react\";\r\nimport { Rating } from \"react-simple-star-rating\";\r\nimport { createComment as sendComment } from \"../../services/menus\";\r\nimport { getIsLogeddIn, getIsUserAdmin } from \"../../Auth/auth\";\r\n\r\n//Cokkies\r\nimport Cookies from \"universal-cookie\";\r\n\r\nexport default function AddComment(id) {\r\n  const [canComment, setCanComment] = useState(false); //state\r\n  const [text, setText] = useState(\"\");\r\n\r\n  // add usertype, ID and username\r\n  const cookies = new Cookies();\r\n  const userType = cookies.get(\"TipoUsuario\");\r\n  const userId = cookies.get(\"Id\");\r\n  const userName = cookies.get(\"Usuario\");\r\n  //console.log(userType, userId, userName);\r\n\r\n  //value of rating\r\n  const [ratingValue, setRatingValue] = useState(0);\r\n\r\n  const [existComment, setExistComment] = useState(true);\r\n\r\n  //state of logins\r\n  //const [isLogIn, setIsLogIn] = useState(null);\r\n  //const [isUser, setUser] = useState(null);\r\n\r\n  // read cookies\r\n  //console.log(getIsLogeddIn());\r\n  //console.log(getIsUserAdmin());\r\n  //setIsLogIn(true);\r\n  //setUser(true);\r\n  //const idser = id;\r\n  //const userName = name;\r\n\r\n  const handleRating = (rate) => setRatingValue(rate / 20);\r\n\r\n  //console.log(ratingValue);\r\n\r\n  const sendData = () => {\r\n    let today = new Date();\r\n\r\n    const data = {\r\n      user: { userName },\r\n      rating: ratingValue,\r\n      comment: text,\r\n      idUser: { userId },\r\n      date: today,\r\n    };\r\n    console.log(data);\r\n    const Url = \"http://localhost:8000/detalle/\" + id;\r\n\r\n    fetch(Url, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Success:\", data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  const addNewcomment = (msg) => {\r\n    //not logIn\r\n    if (userName === false) {\r\n      console.error(\"Para agregar comentarios debes iniciar sesión\");\r\n    } else {\r\n      //Is logIn\r\n      if (userType === \"Administrador de restaurante\") {\r\n        //only user can add comments\r\n        setCanComment(false);\r\n        setText(msg);\r\n        sendData();\r\n      } else {\r\n        //admins can't comment\r\n        console.error(\r\n          \"No se puede agregar comentarios con sesión de administrador\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  function createContent() {\r\n    if (canComment === false) {\r\n      return (\r\n        <button\r\n          id=\"addComment\"\r\n          type=\"button\"\r\n          onClick={() => setCanComment(true)}\r\n        >\r\n          Agrega un comentario\r\n        </button>\r\n      );\r\n    }\r\n    if (canComment === true) {\r\n      return (\r\n        <form id=\"formAddComment\" action=\"/action_page.php\">\r\n          <p id=\"textInstructions\">\r\n            Escribe un comentario sobre el platillo y deja tu puntuación\r\n          </p>\r\n          <textarea\r\n            id=\"addNewComment\"\r\n            name=\"newComment\"\r\n            placeholder=\"Escribe tu reseña del platillo\"\r\n            onChange={(e) => setText(e.target.value)}\r\n          ></textarea>\r\n          <Rating\r\n            transition\r\n            onClick={handleRating}\r\n            ratingValue={ratingValue}\r\n            fillColor={\"#ffd700\"}\r\n            emptyColor={\"#888888\"}\r\n            size={50}\r\n          />\r\n          <button\r\n            id=\"addComment\"\r\n            type=\"button\"\r\n            onClick={(e) => addNewcomment(text)}\r\n          >\r\n            Enviar comentario\r\n          </button>\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n\r\n  return <div id=\"addCommentSection\">{createContent()}</div>;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}