{"ast":null,"code":"import Signature from \"./Signature\";\nimport Policy from \"./Policy\";\nimport { dateISOString, xAmzDate, dateYMD } from \"./Date\";\nimport { throwError } from './ErrorThrower';\n\nclass S3FileUpload {\n  static async uploadFile(file, config) {\n    // Error Thrower :x:\n    throwError(config, file);\n    const fd = new FormData();\n    const key = `${config.dirName ? config.dirName + \"/\" : \"\"}${file.name}`;\n    const url = `https://${config.bucketName}.s3.amazonaws.com/`;\n    fd.append(\"key\", key);\n    fd.append(\"acl\", \"public-read\");\n    fd.append(\"Content-Type\", file.type);\n    fd.append(\"x-amz-meta-uuid\", \"14365123651274\");\n    fd.append(\"x-amz-server-side-encryption\", \"AES256\");\n    fd.append(\"X-Amz-Credential\", `${config.accessKeyId}/${dateYMD}/${config.region}/s3/aws4_request`);\n    fd.append(\"X-Amz-Algorithm\", \"AWS4-HMAC-SHA256\");\n    fd.append(\"X-Amz-Date\", xAmzDate);\n    fd.append(\"x-amz-meta-tag\", \"\");\n    fd.append(\"Policy\", Policy.getPolicy(config));\n    fd.append(\"X-Amz-Signature\", Signature.getSignature(config, dateYMD, Policy.getPolicy(config)));\n    fd.append(\"file\", file);\n    const params = {\n      method: \"post\",\n      headers: {\n        fd\n      },\n      body: fd\n    };\n    const data = await fetch(url, params);\n    if (!data.ok) return Promise.reject(data);\n    return Promise.resolve({\n      bucket: config.bucketName,\n      key: `${config.dirName ? config.dirName + \"/\" : \"\"}${file.name}`,\n      location: `${url}${config.dirName ? config.dirName + \"/\" : \"\"}${file.name}`,\n      result: data\n    });\n  }\n\n  static async deleteFile(fileName, config) {\n    const fd = new FormData();\n    const url = `https://${config.bucketName}.s3-${config.region}.amazonaws.com/${config.dirName ? config.dirName + \"/\" : \"\"}${fileName}`;\n    fd.append(\"Date\", xAmzDate);\n    fd.append(\"X-Amz-Date\", xAmzDate);\n    fd.append(\"Authorization\", Signature.getSignature(config, dateYMD, Policy.getPolicy(config)));\n    fd.append(\"Content-Type\", \"text/plain\");\n    const params = {\n      method: \"delete\",\n      headers: {\n        fd\n      }\n    };\n    const deleteResult = await fetch(url, params);\n    if (!deleteResult.ok) return Promise.reject(deleteResult);\n    return Promise.resolve({\n      ok: deleteResult.ok,\n      status: deleteResult.status,\n      message: \"File Deleted\",\n      fileName: fileName\n    });\n  }\n\n}\n\nconst {\n  uploadFile,\n  deleteFile\n} = S3FileUpload;\nexport { uploadFile, deleteFile };\nexport default S3FileUpload;","map":{"version":3,"names":["Signature","Policy","dateISOString","xAmzDate","dateYMD","throwError","S3FileUpload","uploadFile","file","config","fd","FormData","key","dirName","name","url","bucketName","append","type","accessKeyId","region","getPolicy","getSignature","params","method","headers","body","data","fetch","ok","Promise","reject","resolve","bucket","location","result","deleteFile","fileName","deleteResult","status","message"],"sources":["/home/nesramblue/Nestor/Kodemia/menus_world/node_modules/react-s3/lib/ReactS3.js"],"sourcesContent":["import Signature from \"./Signature\";\nimport Policy from \"./Policy\";\nimport { dateISOString, xAmzDate, dateYMD } from \"./Date\";\nimport { throwError } from './ErrorThrower';\n\nclass S3FileUpload {\n    static async uploadFile(file, config) {\n\n        // Error Thrower :x:\n        throwError(config, file);\n\n        const fd = new FormData();\n        const key = `${config.dirName ? config.dirName + \"/\" : \"\"}${file.name}`;\n        const url = `https://${config.bucketName}.s3.amazonaws.com/`;\n        fd.append(\"key\", key);\n        fd.append(\"acl\", \"public-read\");\n        fd.append(\"Content-Type\", file.type);\n        fd.append(\"x-amz-meta-uuid\", \"14365123651274\");\n        fd.append(\"x-amz-server-side-encryption\", \"AES256\");\n        fd.append(\"X-Amz-Credential\", `${config.accessKeyId}/${dateYMD}/${config.region}/s3/aws4_request`);\n        fd.append(\"X-Amz-Algorithm\", \"AWS4-HMAC-SHA256\");\n        fd.append(\"X-Amz-Date\", xAmzDate);\n        fd.append(\"x-amz-meta-tag\", \"\");\n        fd.append(\"Policy\", Policy.getPolicy(config));\n        fd.append(\"X-Amz-Signature\", Signature.getSignature(config, dateYMD, Policy.getPolicy(config)));\n        fd.append(\"file\", file);\n\n        const params = {\n            method: \"post\",\n            headers: {\n                fd\n            },\n            body: fd\n        };\n\n        const data = await fetch(url, params);\n        if (!data.ok) return Promise.reject(data);\n        return Promise.resolve({\n            bucket: config.bucketName,\n            key: `${config.dirName ? config.dirName + \"/\" : \"\"}${file.name}`,\n            location: `${url}${config.dirName ? config.dirName + \"/\" : \"\"}${file.name}`,\n            result: data\n        });\n    }\n    static async deleteFile(fileName, config) {\n        const fd = new FormData();\n        const url = `https://${config.bucketName}.s3-${config.region}.amazonaws.com/${config.dirName ? config.dirName + \"/\" : \"\"}${fileName}`;\n        fd.append(\"Date\", xAmzDate);\n        fd.append(\"X-Amz-Date\", xAmzDate);\n        fd.append(\"Authorization\", Signature.getSignature(config, dateYMD, Policy.getPolicy(config)));\n        fd.append(\"Content-Type\", \"text/plain\");\n\n        const params = {\n            method: \"delete\",\n            headers: {\n                fd\n            }\n        };\n\n        const deleteResult = await fetch(url, params);\n        if (!deleteResult.ok) return Promise.reject(deleteResult);\n        return Promise.resolve({\n            ok: deleteResult.ok,\n            status: deleteResult.status,\n            message: \"File Deleted\",\n            fileName: fileName\n        });\n    }\n}\nconst { uploadFile, deleteFile } = S3FileUpload;\nexport { uploadFile, deleteFile };\nexport default S3FileUpload;"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,OAAlC,QAAiD,QAAjD;AACA,SAASC,UAAT,QAA2B,gBAA3B;;AAEA,MAAMC,YAAN,CAAmB;EACQ,aAAVC,UAAU,CAACC,IAAD,EAAOC,MAAP,EAAe;IAElC;IACAJ,UAAU,CAACI,MAAD,EAASD,IAAT,CAAV;IAEA,MAAME,EAAE,GAAG,IAAIC,QAAJ,EAAX;IACA,MAAMC,GAAG,GAAI,GAAEH,MAAM,CAACI,OAAP,GAAiBJ,MAAM,CAACI,OAAP,GAAiB,GAAlC,GAAwC,EAAG,GAAEL,IAAI,CAACM,IAAK,EAAtE;IACA,MAAMC,GAAG,GAAI,WAAUN,MAAM,CAACO,UAAW,oBAAzC;IACAN,EAAE,CAACO,MAAH,CAAU,KAAV,EAAiBL,GAAjB;IACAF,EAAE,CAACO,MAAH,CAAU,KAAV,EAAiB,aAAjB;IACAP,EAAE,CAACO,MAAH,CAAU,cAAV,EAA0BT,IAAI,CAACU,IAA/B;IACAR,EAAE,CAACO,MAAH,CAAU,iBAAV,EAA6B,gBAA7B;IACAP,EAAE,CAACO,MAAH,CAAU,8BAAV,EAA0C,QAA1C;IACAP,EAAE,CAACO,MAAH,CAAU,kBAAV,EAA+B,GAAER,MAAM,CAACU,WAAY,IAAGf,OAAQ,IAAGK,MAAM,CAACW,MAAO,kBAAhF;IACAV,EAAE,CAACO,MAAH,CAAU,iBAAV,EAA6B,kBAA7B;IACAP,EAAE,CAACO,MAAH,CAAU,YAAV,EAAwBd,QAAxB;IACAO,EAAE,CAACO,MAAH,CAAU,gBAAV,EAA4B,EAA5B;IACAP,EAAE,CAACO,MAAH,CAAU,QAAV,EAAoBhB,MAAM,CAACoB,SAAP,CAAiBZ,MAAjB,CAApB;IACAC,EAAE,CAACO,MAAH,CAAU,iBAAV,EAA6BjB,SAAS,CAACsB,YAAV,CAAuBb,MAAvB,EAA+BL,OAA/B,EAAwCH,MAAM,CAACoB,SAAP,CAAiBZ,MAAjB,CAAxC,CAA7B;IACAC,EAAE,CAACO,MAAH,CAAU,MAAV,EAAkBT,IAAlB;IAEA,MAAMe,MAAM,GAAG;MACXC,MAAM,EAAE,MADG;MAEXC,OAAO,EAAE;QACLf;MADK,CAFE;MAKXgB,IAAI,EAAEhB;IALK,CAAf;IAQA,MAAMiB,IAAI,GAAG,MAAMC,KAAK,CAACb,GAAD,EAAMQ,MAAN,CAAxB;IACA,IAAI,CAACI,IAAI,CAACE,EAAV,EAAc,OAAOC,OAAO,CAACC,MAAR,CAAeJ,IAAf,CAAP;IACd,OAAOG,OAAO,CAACE,OAAR,CAAgB;MACnBC,MAAM,EAAExB,MAAM,CAACO,UADI;MAEnBJ,GAAG,EAAG,GAAEH,MAAM,CAACI,OAAP,GAAiBJ,MAAM,CAACI,OAAP,GAAiB,GAAlC,GAAwC,EAAG,GAAEL,IAAI,CAACM,IAAK,EAF5C;MAGnBoB,QAAQ,EAAG,GAAEnB,GAAI,GAAEN,MAAM,CAACI,OAAP,GAAiBJ,MAAM,CAACI,OAAP,GAAiB,GAAlC,GAAwC,EAAG,GAAEL,IAAI,CAACM,IAAK,EAHvD;MAInBqB,MAAM,EAAER;IAJW,CAAhB,CAAP;EAMH;;EACsB,aAAVS,UAAU,CAACC,QAAD,EAAW5B,MAAX,EAAmB;IACtC,MAAMC,EAAE,GAAG,IAAIC,QAAJ,EAAX;IACA,MAAMI,GAAG,GAAI,WAAUN,MAAM,CAACO,UAAW,OAAMP,MAAM,CAACW,MAAO,kBAAiBX,MAAM,CAACI,OAAP,GAAiBJ,MAAM,CAACI,OAAP,GAAiB,GAAlC,GAAwC,EAAG,GAAEwB,QAAS,EAApI;IACA3B,EAAE,CAACO,MAAH,CAAU,MAAV,EAAkBd,QAAlB;IACAO,EAAE,CAACO,MAAH,CAAU,YAAV,EAAwBd,QAAxB;IACAO,EAAE,CAACO,MAAH,CAAU,eAAV,EAA2BjB,SAAS,CAACsB,YAAV,CAAuBb,MAAvB,EAA+BL,OAA/B,EAAwCH,MAAM,CAACoB,SAAP,CAAiBZ,MAAjB,CAAxC,CAA3B;IACAC,EAAE,CAACO,MAAH,CAAU,cAAV,EAA0B,YAA1B;IAEA,MAAMM,MAAM,GAAG;MACXC,MAAM,EAAE,QADG;MAEXC,OAAO,EAAE;QACLf;MADK;IAFE,CAAf;IAOA,MAAM4B,YAAY,GAAG,MAAMV,KAAK,CAACb,GAAD,EAAMQ,MAAN,CAAhC;IACA,IAAI,CAACe,YAAY,CAACT,EAAlB,EAAsB,OAAOC,OAAO,CAACC,MAAR,CAAeO,YAAf,CAAP;IACtB,OAAOR,OAAO,CAACE,OAAR,CAAgB;MACnBH,EAAE,EAAES,YAAY,CAACT,EADE;MAEnBU,MAAM,EAAED,YAAY,CAACC,MAFF;MAGnBC,OAAO,EAAE,cAHU;MAInBH,QAAQ,EAAEA;IAJS,CAAhB,CAAP;EAMH;;AA9Dc;;AAgEnB,MAAM;EAAE9B,UAAF;EAAc6B;AAAd,IAA6B9B,YAAnC;AACA,SAASC,UAAT,EAAqB6B,UAArB;AACA,eAAe9B,YAAf"},"metadata":{},"sourceType":"module"}