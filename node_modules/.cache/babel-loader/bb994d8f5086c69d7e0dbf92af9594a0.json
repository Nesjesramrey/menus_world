{"ast":null,"code":"var _jsxFileName = \"/home/nesramblue/Nestor/Kodemia/menus_world/src/components/QrCode/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport QRCode from 'qrcode';\nimport './qrCode.css'; //Cokkies for use name of restaurante and user category\n\nimport Cookies from 'universal-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QrCode = () => {\n  _s();\n\n  const [imageUrl, setImageUrl] = useState('');\n  const currentUrl = window.location.href;\n\n  const generateQrCode = async () => {\n    try {\n      const response = await QRCode.toDataURL(currentUrl, {\n        width: 200\n      });\n      setImageUrl(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const cookies = new Cookies();\n  const userType = cookies.get('TipoUsuario');\n\n  function renderQr() {\n    if (userType) {\n      if (userType === 'Administrador de restaurante') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container qrSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"custom-btn ms-auto\",\n              onClick: () => generateQrCode(),\n              children: \"Genera tu QR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: imageUrl ? /*#__PURE__*/_jsxDEV(\"a\", {\n              href: imageUrl,\n              download: true,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imageUrl,\n                alt: \"img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 9\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 6\n        }, this);\n      }\n    }\n  }\n\n  const qr = renderQr();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: qr\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QrCode, \"y+qr5nv0m6SS5QmwMPtiSezmxMk=\");\n\n_c = QrCode;\nexport default QrCode;\n\nvar _c;\n\n$RefreshReg$(_c, \"QrCode\");","map":{"version":3,"names":["React","useState","QRCode","Cookies","QrCode","imageUrl","setImageUrl","currentUrl","window","location","href","generateQrCode","response","toDataURL","width","error","console","log","cookies","userType","get","renderQr","qr"],"sources":["/home/nesramblue/Nestor/Kodemia/menus_world/src/components/QrCode/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport QRCode from 'qrcode';\n\nimport './qrCode.css';\n\n//Cokkies for use name of restaurante and user category\nimport Cookies from 'universal-cookie';\n\nconst QrCode = () => {\n\tconst [imageUrl, setImageUrl] = useState('');\n\tconst currentUrl = window.location.href;\n\tconst generateQrCode = async () => {\n\t\ttry {\n\t\t\tconst response = await QRCode.toDataURL(currentUrl, { width: 200 });\n\t\t\tsetImageUrl(response);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\tconst cookies = new Cookies();\n\tconst userType = cookies.get('TipoUsuario');\n\n\tfunction renderQr() {\n\t\tif (userType) {\n\t\t\tif (userType === 'Administrador de restaurante') {\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"container qrSection\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button className=\"custom-btn ms-auto\" onClick={() => generateQrCode()}>\n\t\t\t\t\t\t\t\tGenera tu QR\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{imageUrl ? (\n\t\t\t\t\t\t\t\t<a href={imageUrl} download>\n\t\t\t\t\t\t\t\t\t<img src={imageUrl} alt=\"img\" />\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\tconst qr = renderQr();\n\n\treturn <div>{qr}</div>;\n};\n\nexport default QrCode;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,cAAP,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAMM,UAAU,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAnC;;EACA,MAAMC,cAAc,GAAG,YAAY;IAClC,IAAI;MACH,MAAMC,QAAQ,GAAG,MAAMV,MAAM,CAACW,SAAP,CAAiBN,UAAjB,EAA6B;QAAEO,KAAK,EAAE;MAAT,CAA7B,CAAvB;MACAR,WAAW,CAACM,QAAD,CAAX;IACA,CAHD,CAGE,OAAOG,KAAP,EAAc;MACfC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACA;EACD,CAPD;;EASA,MAAMG,OAAO,GAAG,IAAIf,OAAJ,EAAhB;EACA,MAAMgB,QAAQ,GAAGD,OAAO,CAACE,GAAR,CAAY,aAAZ,CAAjB;;EAEA,SAASC,QAAT,GAAoB;IACnB,IAAIF,QAAJ,EAAc;MACb,IAAIA,QAAQ,KAAK,8BAAjB,EAAiD;QAChD,oBACC;UAAK,SAAS,EAAC,qBAAf;UAAA,wBACC;YAAA,uBACC;cAAQ,SAAS,EAAC,oBAAlB;cAAuC,OAAO,EAAE,MAAMR,cAAc,EAApE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADD;YAAA;YAAA;YAAA;UAAA,QADD,eAMC;YAAA,UACEN,QAAQ,gBACR;cAAG,IAAI,EAAEA,QAAT;cAAmB,QAAQ,MAA3B;cAAA,uBACC;gBAAK,GAAG,EAAEA,QAAV;gBAAoB,GAAG,EAAC;cAAxB;gBAAA;gBAAA;gBAAA;cAAA;YADD;cAAA;cAAA;cAAA;YAAA,QADQ,GAIL;UALL;YAAA;YAAA;YAAA;UAAA,QAND;QAAA;UAAA;UAAA;UAAA;QAAA,QADD;MAgBA;IACD;EACD;;EACD,MAAMiB,EAAE,GAAGD,QAAQ,EAAnB;EAEA,oBAAO;IAAA,UAAMC;EAAN;IAAA;IAAA;IAAA;EAAA,QAAP;AACA,CAxCD;;GAAMlB,M;;KAAAA,M;AA0CN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}