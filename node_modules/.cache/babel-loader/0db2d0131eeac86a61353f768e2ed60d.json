{"ast":null,"code":"var _jsxFileName = \"/home/nesramblue/Nestor/Kodemia/menus_world/src/components/QrCode/index.jsx\";\nimport React from \"react\";\nimport QRCode from \"qrcode\";\nimport Input from \"../Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst generateQrCode = async _ref => {\n  let {\n    qr,\n    setQr\n  } = _ref;\n\n  try {\n    const response = await QRCode.toDataURL(\"prueba generando qr\");\n    console.log(response);\n  } catch (error) {\n    console.log(error);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeholder: \"Generar_QR...\",\n      value: qr,\n      callback: e => setQr(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \".btn\",\n      onClick: () => generateQrCode(),\n      children: [\" \", \"Genera tu QR\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\nexport default generateQrCode;","map":{"version":3,"names":["React","QRCode","Input","generateQrCode","qr","setQr","response","toDataURL","console","log","error","e","target","value"],"sources":["/home/nesramblue/Nestor/Kodemia/menus_world/src/components/QrCode/index.jsx"],"sourcesContent":["import React from \"react\";\nimport QRCode from \"qrcode\";\n\nimport Input from \"../Input\";\n\nconst generateQrCode = async ({ qr, setQr }) => {\n  try {\n    const response = await QRCode.toDataURL(\"prueba generando qr\");\n    console.log(response);\n  } catch (error) {\n    console.log(error);\n  }\n\n  return (\n    <div className=\"container\">\n      {/* <input type=\"text\"></input> */}\n      <Input\n        type=\"text\"\n        placeholder=\"Generar_QR...\"\n        value={qr}\n        callback={(e) => setQr(e.target.value)}\n      />\n\n      <button className=\".btn\" onClick={() => generateQrCode()}>\n        {\" \"}\n        Genera tu QR{\" \"}\n      </button>\n    </div>\n  );\n};\n\nexport default generateQrCode;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,KAAP,MAAkB,UAAlB;;;AAEA,MAAMC,cAAc,GAAG,cAAyB;EAAA,IAAlB;IAAEC,EAAF;IAAMC;EAAN,CAAkB;;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,MAAM,CAACM,SAAP,CAAiB,qBAAjB,CAAvB;IACAC,OAAO,CAACC,GAAR,CAAYH,QAAZ;EACD,CAHD,CAGE,OAAOI,KAAP,EAAc;IACdF,OAAO,CAACC,GAAR,CAAYC,KAAZ;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBAEE,QAAC,KAAD;MACE,IAAI,EAAC,MADP;MAEE,WAAW,EAAC,eAFd;MAGE,KAAK,EAAEN,EAHT;MAIE,QAAQ,EAAGO,CAAD,IAAON,KAAK,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV;IAJxB;MAAA;MAAA;MAAA;IAAA,QAFF,eASE;MAAQ,SAAS,EAAC,MAAlB;MAAyB,OAAO,EAAE,MAAMV,cAAc,EAAtD;MAAA,WACG,GADH,kBAEe,GAFf;IAAA;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CAxBD;;AA0BA,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}