{"ast":null,"code":"const URL = process.env.URL;\n\nconst generateConfig = body => {\n  //console.log(JSON.stringify(body));\n  return {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"Application/JSON\"\n    },\n    body: JSON.stringify(body)\n  };\n};\n\nexport const create = async body => {\n  const requestConfig = generateConfig(body);\n  const response = await fetch(`${URL}/menu`, requestConfig);\n  const data = await response.json();\n  return data;\n};\nexport const retrieve = async id => {\n  const response = await fetch(`${URL}/menu/edit?_id=${id}`);\n  const data = await response.json();\n  return data;\n};\nexport const dishById = async id => {\n  const response = await fetch(`${URL}/detalle/${id}`);\n  const data = await response.json();\n  return data;\n};\nexport const createComment = async (id, data) => {\n  const url = URL + \"/detalle/\" + id;\n  console.log(url);\n  const response = await fetch(`${URL}/detalle/${id}`, {\n    method: \"PATCH\",\n    header: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  const allData = await response.json();\n  return allData;\n};\nexport const list = async () => {\n  const response = await fetch(`${URL}/menu`);\n  console.log(URL);\n  const data = await response.json();\n  return data;\n};\nexport const sublist = async (category, restaurant) => {\n  const response = await fetch(`${URL}/menu/submenu?category=${category}&restaurantName=${restaurant}`);\n  const data = await response.json();\n  return data;\n};\nexport const listRestaurant = async restaurant => {\n  const response = await fetch(`${URL}/menu/submenu?restaurantName=${restaurant}`);\n  const data = await response.json();\n  return data;\n};\nexport const update = async (id, body) => {\n  const response = await fetch(`${URL}/menu/edit?_id=${id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"Application/JSON\"\n    },\n    body: JSON.stringify(body)\n  });\n  const data = await response.json();\n  return data;\n};\nexport const deleteDish = async (id, body) => {\n  const response = await fetch(`${URL}/menu/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"Application/JSON\"\n    },\n    body: JSON.stringify(body)\n  }); //console.log(response.status);\n  //console.log(body);\n\n  const data = await response.json();\n  return data;\n};","map":{"version":3,"names":["URL","process","env","generateConfig","body","method","headers","JSON","stringify","create","requestConfig","response","fetch","data","json","retrieve","id","dishById","createComment","url","console","log","header","allData","list","sublist","category","restaurant","listRestaurant","update","deleteDish"],"sources":["/home/nesramblue/Nestor/Kodemia/menus_world/src/services/menus.js"],"sourcesContent":["const URL = process.env.URL;\n\nconst generateConfig = (body) => {\n  //console.log(JSON.stringify(body));\n  return {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"Application/JSON\",\n    },\n    body: JSON.stringify(body),\n  };\n};\n\nexport const create = async (body) => {\n  const requestConfig = generateConfig(body);\n  const response = await fetch(`${URL}/menu`, requestConfig);\n  const data = await response.json();\n  return data;\n};\n\nexport const retrieve = async (id) => {\n  const response = await fetch(`${URL}/menu/edit?_id=${id}`);\n  const data = await response.json();\n  return data;\n};\n\nexport const dishById = async (id) => {\n  const response = await fetch(`${URL}/detalle/${id}`);\n  const data = await response.json();\n  return data;\n};\n\nexport const createComment = async (id, data) => {\n  const url = URL + \"/detalle/\" + id;\n  console.log(url);\n\n  const response = await fetch(`${URL}/detalle/${id}`, {\n    method: \"PATCH\",\n    header: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n  const allData = await response.json();\n  return allData;\n};\n\nexport const list = async () => {\n  const response = await fetch(`${URL}/menu`);\n  console.log(URL);\n  const data = await response.json();\n  return data;\n};\n\nexport const sublist = async (category, restaurant) => {\n  const response = await fetch(\n    `${URL}/menu/submenu?category=${category}&restaurantName=${restaurant}`\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const listRestaurant = async (restaurant) => {\n  const response = await fetch(\n    `${URL}/menu/submenu?restaurantName=${restaurant}`\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const update = async (id, body) => {\n  const response = await fetch(`${URL}/menu/edit?_id=${id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"Application/JSON\",\n    },\n    body: JSON.stringify(body),\n  });\n  const data = await response.json();\n  return data;\n};\n\nexport const deleteDish = async (id, body) => {\n  const response = await fetch(`${URL}/menu/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"Application/JSON\",\n    },\n    body: JSON.stringify(body),\n  });\n  //console.log(response.status);\n  //console.log(body);\n  const data = await response.json();\n  return data;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}