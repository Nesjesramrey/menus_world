{"ast":null,"code":"export const throwError = (_ref, file) => {\n  let {\n    bucketName,\n    region,\n    accessKeyId,\n    secretAccessKey,\n    albumName\n  } = _ref;\n  if (bucketName === null || bucketName === \"\") throw new Error(`Your bucketName cannot be empty `);\n  if (region === null || region === \"\") throw new Error(`Must provide a valide region in order to use your bucket`);\n  if (accessKeyId === null || accessKeyId === \"\") throw new Error(`Must provide accessKeyId`);\n  if (secretAccessKey === null || secretAccessKey === \"\") throw new Error(`Must provide secretAccessKey`);\n  if (!file) throw new Error(`File cannot be empty`);\n};","map":{"version":3,"names":["throwError","file","bucketName","region","accessKeyId","secretAccessKey","albumName","Error"],"sources":["/home/nesramblue/Nestor/Kodemia/menus_world/node_modules/react-s3/lib/ErrorThrower.js"],"sourcesContent":["export const throwError = ({ bucketName, region, accessKeyId, secretAccessKey, albumName }, file) => {\n    if (bucketName === null || bucketName === \"\") throw new Error(`Your bucketName cannot be empty `);\n    if (region === null || region === \"\") throw new Error(`Must provide a valide region in order to use your bucket`);\n    if (accessKeyId === null || accessKeyId === \"\") throw new Error(`Must provide accessKeyId`);\n    if (secretAccessKey === null || secretAccessKey === \"\") throw new Error(`Must provide secretAccessKey`);\n    if (!file) throw new Error(`File cannot be empty`);\n};"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,OAAkEC,IAAlE,KAA2E;EAAA,IAA1E;IAAEC,UAAF;IAAcC,MAAd;IAAsBC,WAAtB;IAAmCC,eAAnC;IAAoDC;EAApD,CAA0E;EACjG,IAAIJ,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,EAA1C,EAA8C,MAAM,IAAIK,KAAJ,CAAW,kCAAX,CAAN;EAC9C,IAAIJ,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,EAAlC,EAAsC,MAAM,IAAII,KAAJ,CAAW,0DAAX,CAAN;EACtC,IAAIH,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,EAA5C,EAAgD,MAAM,IAAIG,KAAJ,CAAW,0BAAX,CAAN;EAChD,IAAIF,eAAe,KAAK,IAApB,IAA4BA,eAAe,KAAK,EAApD,EAAwD,MAAM,IAAIE,KAAJ,CAAW,8BAAX,CAAN;EACxD,IAAI,CAACN,IAAL,EAAW,MAAM,IAAIM,KAAJ,CAAW,sBAAX,CAAN;AACd,CANM"},"metadata":{},"sourceType":"module"}