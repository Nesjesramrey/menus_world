{"ast":null,"code":"var _jsxFileName = \"/home/nesramblue/Nestor/Kodemia/menus_world/src/components/Navigation/index.js\";\nimport throttle from \"lodash.throttle\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Collapse, Navbar, NavbarToggler, Nav, NavItem, NavLink } from \"reactstrap\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const sectionShape = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired\n});\nconst propTypes = {\n  sections: PropTypes.arrayOf(sectionShape)\n};\nconst defaultProps = {\n  sections: []\n};\n/**\n * A responsive navbar component for an in-page navigation menu and logo.\n */\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props); // Initialize state\n\n    this.state = {\n      sectionNodes: [],\n      // Cached section nodes data\n      currentSection: null,\n      // Current section, used to highlight the current menu entry\n      sticky: false,\n      // Tells if the navbar should be marked as sticky and gain special styles\n      isOpen: false // For mobile support, tells if the navbar menu is open\n\n    }; // Methods binding\n\n    this.onScroll = this.onScroll.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.cacheSectionNodes = this.cacheSectionNodes.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", throttle(this.onScroll, 100));\n  }\n\n  onScroll() {\n    // Update the current section and the sticky state prop\n    let currentSection = null;\n    const position = window.pageYOffset !== undefined ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n    const isScrollBottom = window.innerHeight + position >= document.body.scrollHeight;\n    this.cacheSectionNodes();\n    this.state.sectionNodes.forEach(_ref => {\n      let {\n        id,\n        position: nodePosition\n      } = _ref;\n\n      if (position >= nodePosition || isScrollBottom) {\n        currentSection = id;\n      }\n    });\n    this.setState({ ...this.state,\n      currentSection,\n      sticky: position > 100\n    });\n  }\n\n  cacheSectionNodes() {\n    // If section nodes were calculated, do nothing. Otherwise find the sections in the DOM and\n    // save its data in the state.\n    if (this.state.sectionNodes.length > 0) return;\n    this.setState({ ...this.state,\n      sectionNodes: this.props.sections.map(_ref2 => {\n        let {\n          id\n        } = _ref2;\n        const {\n          offsetTop\n        } = document.getElementById(id) || {};\n        return {\n          id,\n          position: offsetTop\n        };\n      })\n    });\n  }\n\n  toggle() {\n    this.setState({ ...this.state,\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    const {\n      sticky,\n      currentSection\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Navbar, {\n      light: true,\n      fixed: \"top\",\n      expand: \"lg\",\n      className: classnames(\"navigation\", {\n        \"navbar-shrink\": sticky\n      }),\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          className: \"navbar-brand\",\n          children: \"Iniciar Sesion o registrarse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavbarToggler, {\n          onClick: this.toggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          isOpen: this.state.isOpen,\n          navbar: true,\n          children: /*#__PURE__*/_jsxDEV(Nav, {\n            className: \"navbar-nav ml-auto\",\n            children: this.props.sections.map(_ref3 => {\n              let {\n                id,\n                title\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(NavItem, {\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  href: `#${id}`,\n                  className: classnames(\"nav-link\", {\n                    active: currentSection === id\n                  }),\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this)\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nNavigation.propTypes = propTypes;\nNavigation.defaultProps = defaultProps;\nexport default Navigation;","map":{"version":3,"names":["throttle","React","Component","PropTypes","classnames","Link","Container","Collapse","Navbar","NavbarToggler","Nav","NavItem","NavLink","sectionShape","shape","title","string","isRequired","id","propTypes","sections","arrayOf","defaultProps","Navigation","constructor","props","state","sectionNodes","currentSection","sticky","isOpen","onScroll","bind","toggle","cacheSectionNodes","componentDidMount","window","addEventListener","position","pageYOffset","undefined","document","documentElement","body","parentNode","scrollTop","isScrollBottom","innerHeight","scrollHeight","forEach","nodePosition","setState","length","map","offsetTop","getElementById","render","active"],"sources":["/home/nesramblue/Nestor/Kodemia/menus_world/src/components/Navigation/index.js"],"sourcesContent":["import throttle from \"lodash.throttle\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n} from \"reactstrap\";\n\nimport \"./style.css\";\n\nexport const sectionShape = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n});\n\nconst propTypes = {\n  sections: PropTypes.arrayOf(sectionShape),\n};\n\nconst defaultProps = {\n  sections: [],\n};\n\n/**\n * A responsive navbar component for an in-page navigation menu and logo.\n */\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n\n    // Initialize state\n    this.state = {\n      sectionNodes: [], // Cached section nodes data\n      currentSection: null, // Current section, used to highlight the current menu entry\n      sticky: false, // Tells if the navbar should be marked as sticky and gain special styles\n      isOpen: false, // For mobile support, tells if the navbar menu is open\n    };\n\n    // Methods binding\n    this.onScroll = this.onScroll.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.cacheSectionNodes = this.cacheSectionNodes.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", throttle(this.onScroll, 100));\n  }\n\n  onScroll() {\n    // Update the current section and the sticky state prop\n    let currentSection = null;\n    const position =\n      window.pageYOffset !== undefined\n        ? window.pageYOffset\n        : (\n            document.documentElement ||\n            document.body.parentNode ||\n            document.body\n          ).scrollTop;\n    const isScrollBottom =\n      window.innerHeight + position >= document.body.scrollHeight;\n\n    this.cacheSectionNodes();\n    this.state.sectionNodes.forEach(({ id, position: nodePosition }) => {\n      if (position >= nodePosition || isScrollBottom) {\n        currentSection = id;\n      }\n    });\n\n    this.setState({\n      ...this.state,\n      currentSection,\n      sticky: position > 100,\n    });\n  }\n\n  cacheSectionNodes() {\n    // If section nodes were calculated, do nothing. Otherwise find the sections in the DOM and\n    // save its data in the state.\n    if (this.state.sectionNodes.length > 0) return;\n    this.setState({\n      ...this.state,\n      sectionNodes: this.props.sections.map(({ id }) => {\n        const { offsetTop } = document.getElementById(id) || {};\n        return { id, position: offsetTop };\n      }),\n    });\n  }\n\n  toggle() {\n    this.setState({\n      ...this.state,\n      isOpen: !this.state.isOpen,\n    });\n  }\n\n  render() {\n    const { sticky, currentSection } = this.state;\n\n    return (\n      <Navbar\n        light\n        fixed=\"top\"\n        expand=\"lg\"\n        className={classnames(\"navigation\", { \"navbar-shrink\": sticky })}\n      >\n        <Container>\n          <Link to=\"/register\" className=\"navbar-brand\">\n            Iniciar Sesion o registrarse\n          </Link>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"navbar-nav ml-auto\">\n              {this.props.sections.map(({ id, title }) => (\n                <NavItem key={id}>\n                  <NavLink\n                    href={`#${id}`}\n                    className={classnames(\"nav-link\", {\n                      active: currentSection === id,\n                    })}\n                  >\n                    {title}\n                  </NavLink>\n                </NavItem>\n              ))}\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nNavigation.propTypes = propTypes;\nNavigation.defaultProps = defaultProps;\n\nexport default Navigation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}